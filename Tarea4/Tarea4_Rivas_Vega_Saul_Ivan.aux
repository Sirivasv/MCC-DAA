\relax 
\catcode `"\active 
\catcode `<\active 
\catcode `>\active 
\@nameuse{es@quoting}
\bibstyle{IEEEtran}
\providecommand \oddpage@label [2]{}
\babel@aux{spanish}{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Ejercicio 1.}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Da un ejemplo de una familia de digr\IeC {\'a}ficas de $n$ v\IeC {\'e}rtices con pesos no negativos tal que admita una ejecuci\IeC {\'o}n del algoritmo de Dijkstra en la cual todos los nodos actualizan a su padre y su estimaci\IeC {\'o}n de distancia $d(v)$ una sola vez; es decir, la primera oferta de camino que reciben, es la del camino mas corto. Demuestra que tu ejemplo cumple lo que se pide.}{2}}
\@writefile{toc}{\contentsline {paragraph}{}{2}}
\@writefile{toc}{\contentsline {paragraph}{Demostraci\IeC {\'o}n}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Da un ejemplo de una familia de digr\IeC {\'a}ficas con pesos no negativos tal que cualquier ejecuci\IeC {\'o}n del algoritmo de Dijkstra requiera que alg\IeC {\'u}n v\IeC {\'e}rtice actualice su padre y su estimaci\IeC {\'o}n de distancia dos veces. Demuestra que tu ejemplo cumple lo que se pide.}{4}}
\@writefile{toc}{\contentsline {paragraph}{}{4}}
\@writefile{toc}{\contentsline {paragraph}{Demostraci\IeC {\'o}n}{5}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Ejercicio 2.}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}De acuerdo con el algoritmo de Dijkstra que revisamos en clase, para cada $n\in \mathbb  {N}$ con $n>2$, presenta una familia de gr\IeC {\'a}ficas de $n$ v\IeC {\'e}rtices con pesos tanto positivos como negativos y sin ciclos dirigidos de longitud negativa para la cual se cumple que si $G$ es una gr\IeC {\'a}fica de la familia, el algoritmo de Dijkstra falla en encontrar el camino m\IeC {\'a}s corto entre $s$ y alg\IeC {\'u}n otro v\IeC {\'e}rtice de $G$. Demuestra que de hecho existe tal v\IeC {\'e}rtice.}{5}}
\@writefile{toc}{\contentsline {paragraph}{}{5}}
\@writefile{toc}{\contentsline {paragraph}{Demostraci\IeC {\'o}n}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Toma una gr\IeC {\'a}fica de la familia que propones y muestra que Bellman-Ford si encuentra el camino que Dijkstra no.}{6}}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces Bellman-Ford.\relax }}{7}}
\@writefile{toc}{\contentsline {paragraph}{Demostraci\IeC {\'o}n}{7}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Ejercicio 3}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}De acuerdo con el algoritmo de Dijkstra que revisamos en clase, para cada $n\in \mathbb  {N}$ con $n>2$, presenta una familia de gr\IeC {\'a}fircas de $n$ v\IeC {\'e}rtices con pesos positivos y negativos y sin ciclos dirigidos de longitud negativa para la cual se cumple que si $G$ es una gr\IeC {\'a}fica de la familia, el algoritmo de Dijkstra no falla en encontrar el camino m\IeC {\'a}s corto entre dos v\IeC {\'e}rtices de $G$. Prueba que en efecto el algoritmo encuentra los caminos m\IeC {\'a}s cortos.}{9}}
\@writefile{toc}{\contentsline {paragraph}{}{9}}
\@writefile{toc}{\contentsline {paragraph}{Demostraci\IeC {\'o}n}{9}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Ejercicio 4. }{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Considera la estructura de datos de cola de prioridad, implementada con heaps binarios, y el arreglo $A=(10, 12, 1, 14, 6, 5, 8, 15, 3, 9, 7, 4, 11, 13, 2)$. Explica c\IeC {\'o}mo construyes una cola de prioridad que tenga los elementos de A (tienes que dar la construcci\IeC {\'o}n del \IeC {\'a}rbol binario); no puedes ordenar el arreglo de entrada antes de crear la cola. Escribe expl\IeC {\'\i }citamente la cola resultante.}{10}}
\@writefile{toc}{\contentsline {paragraph}{}{10}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:sfig1}{{1a}{11}}
\newlabel{sub@fig:sfig1}{{a}{11}}
\newlabel{fig:sfig2}{{1b}{11}}
\newlabel{sub@fig:sfig2}{{b}{11}}
\newlabel{fig:sfig3}{{1c}{11}}
\newlabel{sub@fig:sfig3}{{c}{11}}
\newlabel{fig:sfig4}{{1d}{11}}
\newlabel{sub@fig:sfig4}{{d}{11}}
\newlabel{fig:sfig5}{{1e}{11}}
\newlabel{sub@fig:sfig5}{{e}{11}}
\newlabel{fig:sfig6}{{1f}{11}}
\newlabel{sub@fig:sfig6}{{f}{11}}
\newlabel{fig:sfig7}{{1g}{11}}
\newlabel{sub@fig:sfig7}{{g}{11}}
\newlabel{fig:sfig8}{{1h}{11}}
\newlabel{sub@fig:sfig8}{{h}{11}}
\newlabel{fig:sfig9}{{1i}{11}}
\newlabel{sub@fig:sfig9}{{i}{11}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces \IeC {\'A}rboles binarios en las primeras 9 inserciones.\relax }}{11}}
\newlabel{fig:fig}{{1}{11}}
\newlabel{fig:sfig10}{{2a}{12}}
\newlabel{sub@fig:sfig10}{{a}{12}}
\newlabel{fig:sfig11}{{2b}{12}}
\newlabel{sub@fig:sfig11}{{b}{12}}
\newlabel{fig:sfig12}{{2c}{12}}
\newlabel{sub@fig:sfig12}{{c}{12}}
\newlabel{fig:sfig13}{{2d}{12}}
\newlabel{sub@fig:sfig13}{{d}{12}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces \IeC {\'A}rboles binarios en las siguientes 4 inserciones.\relax }}{12}}
\newlabel{fig:fig_}{{2}{12}}
\newlabel{fig:sfig14}{{3a}{13}}
\newlabel{sub@fig:sfig14}{{a}{13}}
\newlabel{fig:sfig15}{{3b}{13}}
\newlabel{sub@fig:sfig15}{{b}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces \IeC {\'A}rboles binarios en las \IeC {\'u}ltimas 2 inserciones.\relax }}{13}}
\newlabel{fig:fig__}{{3}{13}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Ejercicio 5.}{14}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Demuestra en detalle y con una figura, por qu\IeC {\'e} el algoritmo de Dijkstra es correcto.}{14}}
\@writefile{toc}{\contentsline {paragraph}{}{14}}
\@writefile{loa}{\contentsline {algocf}{\numberline {2}{\ignorespaces Dijkstra.\relax }}{14}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Gr\IeC {\'a}fica demo, con nodos del conjunto $S$ en color azul.\relax }}{14}}
\newlabel{fig4}{{4}{14}}
\@writefile{toc}{\contentsline {paragraph}{Demostraci\IeC {\'o}n de que el algoritmo termina.}{14}}
\@writefile{toc}{\contentsline {paragraph}{Demostraci\IeC {\'o}n de correctitud.}{15}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Ejercicio 6}{16}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1}Ofrece un algoritmo que, dada una cola de prioridad implementada con heaps binarios y con $n$ elementos, elimine el elemento $i$-\IeC {\'e}simo de la cola. Analiza su complejidad y demuestra que en efecto tu algoritmo es correcto y tiene la complejidad que presumes.}{16}}
\@writefile{toc}{\contentsline {paragraph}{}{16}}
\@writefile{loa}{\contentsline {algocf}{\numberline {3}{\ignorespaces Algoritmo REMOVER para eliminar el elemento $i$-\IeC {\'e}simo de la cola de prioridad\relax }}{16}}
\@writefile{toc}{\contentsline {paragraph}{Complejidad}{16}}
\@writefile{toc}{\contentsline {paragraph}{Correctitud}{17}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Ejercicio 7.}{18}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.1}Sea $G=(V,E)$ una gr\IeC {\'a}fica. Demuestra que cualesquiera dos de las siguientes propiedades implican la tercera.}{18}}
\@writefile{toc}{\contentsline {paragraph}{Demostremos que $1$ y $3$ implican $2$.}{18}}
\@writefile{toc}{\contentsline {paragraph}{Demostremos que $2$ y $3$ implican $1$.}{18}}
\@writefile{toc}{\contentsline {paragraph}{Demostremos que $1$ y $2$ implican $3$.}{19}}
\@writefile{toc}{\contentsline {section}{\numberline {8}Ejercicio 8.}{19}}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.1}El resumen se anexa al final del documento para cumplir con las especificaciones de formato.}{19}}
\@writefile{toc}{\contentsline {section}{\numberline {9}Ejercicio 9.}{20}}
\@writefile{toc}{\contentsline {subsection}{\numberline {9.1}Para resolver el problema del c\IeC {\'a}lculo de distancias entre todos los v\IeC {\'e}rtices de una gr\IeC {\'a}fica dirigida $G=(V,E)$ con pesos en las aristas positivos o negativos, se pueden utilizar los siguientes algoritmos con respectivas complejidades:}{20}}
\@writefile{toc}{\contentsline {paragraph}{}{20}}
\@writefile{toc}{\contentsline {section}{\numberline {10}Ejercicio 10.}{21}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.1}Prueba que agregar una constante a todos los pesos y que multiplicar por una constante positiva no altera el conjunto de \IeC {\'a}rboles generadores m\IeC {\'\i }nimos de una gr\IeC {\'a}fica conexa con pesos dada.}{21}}
\@writefile{toc}{\contentsline {paragraph}{Demostraci\IeC {\'o}n}{21}}
\@writefile{toc}{\contentsline {section}{\numberline {11}Ejercicio 11.}{23}}
\@writefile{toc}{\contentsline {subsection}{\numberline {11.1}Demuestra que si todas las aristas de una gr\IeC {\'a}fica conexa $G$ tienen pesos diferentes dos a dos, entonces $G$ tiene un s\IeC {\'o}lo \IeC {\'a}rbol generador m\IeC {\'\i }nimo.}{23}}
\@writefile{toc}{\contentsline {paragraph}{Demostraci\IeC {\'o}n}{23}}
\@writefile{toc}{\contentsline {section}{\numberline {12}Ejercicio 12.}{24}}
\@writefile{toc}{\contentsline {subsection}{\numberline {12.1}Dado un \IeC {\'a}rbol generador m\IeC {\'\i }nimo de una gr\IeC {\'a}fica con pesos $G=(V,E)$ supongamos que una arista de $G$ es eliminada sin desconectar la gr\IeC {\'a}fica. Describe c\IeC {\'o}mo encontrar un nuevo \IeC {\'a}rbol recubridor m\IeC {\'\i }nimo en tiempo proporcional a $|E|$.}{24}}
\@writefile{toc}{\contentsline {section}{\numberline {13}Ejercicio 13.}{25}}
\@writefile{toc}{\contentsline {subsection}{\numberline {13.1}Dise\IeC {\~n}a un algoritmo que resuelva el siguiente problema y demuestra que tiene la complejidad que se solicita: dada una gr\IeC {\'a}fica conexa $G$ con pesos positivos, encontrar en a lo m\IeC {\'a}s tiempo $O(mlog(m))$, un \IeC {\'a}rbol recubridor m\IeC {\'\i }nimo que minimice la arista m\IeC {\'a}s costosa.}{25}}
\@writefile{toc}{\contentsline {paragraph}{}{25}}
