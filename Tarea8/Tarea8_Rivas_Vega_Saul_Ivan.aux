\relax 
\catcode `"\active 
\catcode `<\active 
\catcode `>\active 
\@nameuse{es@quoting}
\bibstyle{IEEEtran}
\providecommand \oddpage@label [2]{}
\babel@aux{spanish}{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Ejercicio 1.}{2}}
\@writefile{toc}{\contentsline {paragraph}{}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}a) Demuestra que la siguiente estrategia \textit  {greedy} produce \textit  {formatos} arbitrariamente malos, es decir, con penalizaciones arbitrariamente grandes}{2}}
\@writefile{toc}{\contentsline {paragraph}{}{2}}
\@writefile{toc}{\contentsline {paragraph}{Demostraci\IeC {\'o}n.}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}b) Usa la t\IeC {\'e}cnica de programaci\IeC {\'o}n din\IeC {\'a}mica para dise\IeC {\~n}ar un algoritmo que encuentre un formato con penalizaci\IeC {\'o}n m\IeC {\'\i }nima. Demuestra la correctitud de tu algoritmo y haz un an\IeC {\'a}lisis de tiempo y espacio.}{4}}
\newlabel{f_ej3.2}{{7}{4}}
\newlabel{f_ej3.3}{{8}{4}}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces Algoritmo FORMATODP.\relax }}{5}}
\@writefile{loa}{\contentsline {algocf}{\numberline {2}{\ignorespaces Algoritmo FuncionP.\relax }}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.1}Demostraci\IeC {\'o}n de correctitud}{6}}
\@writefile{toc}{\contentsline {paragraph}{El algoritmo FuncionP termina.}{6}}
\@writefile{toc}{\contentsline {paragraph}{El algoritmo FORMATODP termina.}{6}}
\@writefile{toc}{\contentsline {paragraph}{El algoritmo FuncionP es correcto.}{6}}
\@writefile{toc}{\contentsline {paragraph}{El algoritmo FORMATODP es correcto.}{7}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.2}An\IeC {\'a}lisis de tiempo.}{7}}
\@writefile{toc}{\contentsline {paragraph}{El algoritmo FuncionP tiene complejidad $O(n)$.}{7}}
\@writefile{toc}{\contentsline {paragraph}{El algoritmo FormatoDP tiene complejidad $O(n^3)$.}{7}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.3}An\IeC {\'a}lisis de espacio.}{7}}
\@writefile{toc}{\contentsline {paragraph}{El algoritmo FuncionP tiene espacio de orden $O(1)$.}{7}}
\@writefile{toc}{\contentsline {paragraph}{El algoritmo FORMATODP ocupa espacio de orden $O(n)$.}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}c) Modifica tu algoritmo para que funcione con una funci\IeC {\'o}n de penalizaci\IeC {\'o}n de l\IeC {\'\i }nea dada; la penalizaci\IeC {\'o}n de un formato sigue siendo la suma de las penalizaciones de sus l\IeC {\'\i }neas.}{8}}
\@writefile{toc}{\contentsline {paragraph}{Demostraci\IeC {\'o}n de por que el algoritmo FORMATODP funciona con una funci\IeC {\'o}n de penalizaci\IeC {\'o}n de l\IeC {\'\i }nea dada.}{8}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Ejercicio 2}{8}}
\@writefile{toc}{\contentsline {paragraph}{}{8}}
\@writefile{loa}{\contentsline {algocf}{\numberline {3}{\ignorespaces Algoritmo MAXDECLIVE.\relax }}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Demostraci\IeC {\'o}n correctitud.}{9}}
\@writefile{toc}{\contentsline {paragraph}{El algoritmo termina.}{9}}
\@writefile{toc}{\contentsline {paragraph}{El algoritmo devuelve un declive de longitud m\IeC {\'a}xima.}{10}}
\@writefile{toc}{\contentsline {paragraph}{Observaci\IeC {\'o}n 1}{10}}
\@writefile{toc}{\contentsline {paragraph}{Demostraci\IeC {\'o}n de la Observaci\IeC {\'o}n 1}{10}}
\@writefile{toc}{\contentsline {paragraph}{}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}An\IeC {\'a}lisis de tiempo}{10}}
\@writefile{toc}{\contentsline {paragraph}{El algoritmo es de complejidad $O(nlogn)$ y por lo tanto $o(n^2)$}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}An\IeC {\'a}lisis de espacio}{11}}
\@writefile{toc}{\contentsline {paragraph}{El algoritmo ocupa espacio de orden $O(n)$}{11}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Ejercicio 3}{11}}
\@writefile{toc}{\contentsline {paragraph}{}{11}}
\@writefile{toc}{\contentsline {paragraph}{Demostraci\IeC {\'o}n.}{11}}
\@writefile{toc}{\contentsline {paragraph}{Afirmaci\IeC {\'o}n 1.}{12}}
\@writefile{toc}{\contentsline {paragraph}{Afirmaci\IeC {\'o}n 2.}{12}}
\@writefile{toc}{\contentsline {paragraph}{}{12}}
\@writefile{toc}{\contentsline {paragraph}{}{12}}
\@writefile{toc}{\contentsline {paragraph}{}{12}}
\@writefile{toc}{\contentsline {paragraph}{}{13}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Ejercicio 4}{13}}
\@writefile{toc}{\contentsline {paragraph}{}{13}}
\@writefile{loa}{\contentsline {algocf}{\numberline {4}{\ignorespaces Algoritmo GetCorte.\relax }}{13}}
\@writefile{toc}{\contentsline {paragraph}{Demostraci\IeC {\'o}n.}{14}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Ejercicio 5}{15}}
\@writefile{toc}{\contentsline {paragraph}{}{15}}
\@writefile{toc}{\contentsline {paragraph}{Responde a lo siguiente:}{15}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Demuestra que el n\IeC {\'u}mero esperado de iteraciones para ejecutar la acci\IeC {\'o}n es $O(2^n)$.}{15}}
\newlabel{ec11}{{11}{16}}
\newlabel{ec12}{{12}{17}}
\newlabel{ec13}{{13}{17}}
\newlabel{ec14}{{14}{18}}
\@writefile{toc}{\contentsline {paragraph}{}{19}}
\newlabel{ec15}{{15}{19}}
\newlabel{ec16}{{16}{20}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}\IeC {\textquestiondown }Cu\IeC {\'a}l es el n\IeC {\'u}mero esperado de iteraciones si en cada una de ellas los servidores obtienen su $r-$\IeC {\'e}simo bit, $b_r$, llamando una funci\IeC {\'o}n \textbf  {shared\_random\_bit($r$)} que devuelve el mismo $r-$\IeC {\'e}simo bit a todos los servidores con probabilidad $p$, para alguna constante $0 < p < 1$?}{21}}
\@writefile{toc}{\contentsline {paragraph}{}{21}}
\newlabel{ec19}{{19}{21}}
\newlabel{ec20}{{20}{21}}
\@writefile{toc}{\contentsline {paragraph}{Demostraci\IeC {\'o}n.}{22}}
\newlabel{ec23}{{21}{22}}
\newlabel{ec21}{{22}{22}}
\newlabel{ec22}{{23}{23}}
\@writefile{toc}{\contentsline {paragraph}{}{23}}
\newlabel{ecSn2}{{24}{24}}
\newlabel{ecSn3}{{25}{25}}
\newlabel{ecSn4}{{26}{26}}
\newlabel{ecFnt}{{27}{26}}
